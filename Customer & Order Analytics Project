/*In this SQL, I'm querying a database with multiple tables in it to quantify statistics about customer and order data.*/

SELECT * FROM BIT_DB.customers LIMIT 20;

/*After running that query, you should be able to answer: What columns are in the customers table?
Now re-write the query to answer this one: What columns are in the JanSales table?
What column(s) do the customers table and the JanSales table have in common? 
Run both queries again and compare the results if you missed it!*/

/* (order_id, acctnum)*/
/* (orderID, Product, Quantity, price, orderdate, location)*/

select * from BIT_DB.JanSales limit 20*;

/*SELECT * FROM BIT_DB.customers 
WHERE length(order_id) = 6
AND order_id <> 'Order ID'*/

SELECT * FROM BIT_DB.customers WHERE length(order_id) = 6 AND order_id <> 'Order ID' limit 20;

/*How many orders were placed in January? Remember to filter out the blank and incorrect 
order IDs like we did in the "dealing with messy data" section of the previous lesson!*/

select count(orderID)
from BIT_DB.JanSales
where length(orderID) = 6
and orderID <> 'Order ID';

/*How many of those orders were for an iPhone?*/
select count(orderID)
from BIT_DB.JanSales
where Product='iPhone'
and length(orderID) = 6
and orderID <> 'Order ID';

/*Select the customer account numbers for all the orders that were placed in February.*/
select c.acctnum numbers
from BIT_DB.customers c
inner join BIT_DB.FebSales fs
on c.order_id = fs.orderID
where length(orderID) = 6
and orderID <> 'Order ID';

/*Which product was the cheapest one sold in January, and what was the price?*/

select distinct Product, price
from BIT_DB.JanSales
where price in (SELECT min(price) FROM BIT_DB.JanSales)
and length(orderID) = 6
and orderID <> 'Order ID';

/*What is the total revenue for each product sold in January?
(Revenue can be calculated using the number of products sold and the price of the products).*/

select Product, sum(Quantity)*price as 'Revenue'
from BIT_DB.JanSales
where length(orderID) = 6
and orderID <> 'Order ID'
group by Product;

/*Which products were sold in February at 548 Lincoln St, Seattle, 
WA 98101, how many of each were sold, and what was the total revenue? */

select Product, sum(Quantity), sum(Quantity)*price as 'Revenue'
from BIT_DB.FebSales
where location = '548 Lincoln St, Seattle, WA 98101'
and length(orderID) = 6
and orderID <> 'Order ID'
group by Product;

/*How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers?*/

select count(acctnum) as 'Total customers', AVG(Quantity*price) as 'Average Amount Spent'
from BIT_DB.customers c
inner join BIT_DB.FebSales fs
on c.order_id = fs.orderID
where quantity > 2
and length(orderID) = 6
and orderID <> 'Order ID';

/*filter data thought dates*/

SELECT orderdate
FROM BIT_DB.FebSales
WHERE orderdate between '02/13/19 00:00' AND '02/18/19 00:00';

SELECT location
FROM BIT_DB.FebSales 
WHERE orderdate = '02/18/19 01:35';

SELECT sum(quantity)
FROM BIT_DB.FebSales 
WHERE orderdate like '02/18/19%';

SELECT orderdate from BIT_DB.FebSales;

SELECT distinct Product
FROM BIT_DB.FebSales
WHERE Product like '%Batteries%';

SELECT distinct Product, Price
FROM BIT_DB.FebSales 
WHERE Price like '%.99';

/*List all the products sold in Los Angeles in February, and include how many of each were sold*/

SELECT Product, SUM(Quantity) as 'Amount Sold'
FROM BIT_DB.FebSales
WHERE location like '%Los Angeles%'
and length(orderID) = 6
and orderID <> 'Order ID'
group by Product;

/*In this SQL, I'm querying a database with multiple tables in it to quantify statistics about customer and order data.*/

SELECT * FROM BIT_DB.customers LIMIT 20;

/*After running that query, you should be able to answer: What columns are in the customers table?
Now re-write the query to answer this one: What columns are in the JanSales table?
What column(s) do the customers table and the JanSales table have in common? 
Run both queries again and compare the results if you missed it!*/

/* (order_id, acctnum)*/
/* (orderID, Product, Quantity, price, orderdate, location)*/

select * from BIT_DB.JanSales limit 20*;

/*SELECT * FROM BIT_DB.customers 
WHERE length(order_id) = 6
AND order_id <> 'Order ID'*/

SELECT * FROM BIT_DB.customers WHERE length(order_id) = 6 AND order_id <> 'Order ID' limit 20;

/*How many orders were placed in January? Remember to filter out the blank and incorrect 
order IDs like we did in the "dealing with messy data" section of the previous lesson!*/

select count(orderID)
from BIT_DB.JanSales
where length(orderID) = 6
and orderID <> 'Order ID';

/*How many of those orders were for an iPhone?*/
select count(orderID)
from BIT_DB.JanSales
where Product='iPhone'
and length(orderID) = 6
and orderID <> 'Order ID';

/*Select the customer account numbers for all the orders that were placed in February.*/
select c.acctnum numbers
from BIT_DB.customers c
inner join BIT_DB.FebSales fs
on c.order_id = fs.orderID
where length(orderID) = 6
and orderID <> 'Order ID';

/*Which product was the cheapest one sold in January, and what was the price?*/

select distinct Product, price
from BIT_DB.JanSales
where price in (SELECT min(price) FROM BIT_DB.JanSales)
and length(orderID) = 6
and orderID <> 'Order ID';

/*What is the total revenue for each product sold in January?
(Revenue can be calculated using the number of products sold and the price of the products).*/

select Product, sum(Quantity)*price as 'Revenue'
from BIT_DB.JanSales
where length(orderID) = 6
and orderID <> 'Order ID'
group by Product;

/*Which products were sold in February at 548 Lincoln St, Seattle, 
WA 98101, how many of each were sold, and what was the total revenue? */

select Product, sum(Quantity), sum(Quantity)*price as 'Revenue'
from BIT_DB.FebSales
where location = '548 Lincoln St, Seattle, WA 98101'
and length(orderID) = 6
and orderID <> 'Order ID'
group by Product;

/*How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers?*/

select count(acctnum) as 'Total customers', AVG(Quantity*price) as 'Average Amount Spent'
from BIT_DB.customers c
inner join BIT_DB.FebSales fs
on c.order_id = fs.orderID
where quantity > 2
and length(orderID) = 6
and orderID <> 'Order ID';

/*filter data thought dates*/

SELECT orderdate
FROM BIT_DB.FebSales
WHERE orderdate between '02/13/19 00:00' AND '02/18/19 00:00';

SELECT location
FROM BIT_DB.FebSales 
WHERE orderdate = '02/18/19 01:35';

SELECT sum(quantity)
FROM BIT_DB.FebSales 
WHERE orderdate like '02/18/19%';

SELECT orderdate from BIT_DB.FebSales;

SELECT distinct Product
FROM BIT_DB.FebSales
WHERE Product like '%Batteries%';

SELECT distinct Product, Price
FROM BIT_DB.FebSales 
WHERE Price like '%.99';

/*List all the products sold in Los Angeles in February, and include how many of each were sold*/

SELECT Product, SUM(Quantity) as 'Amount Sold'
FROM BIT_DB.FebSales
WHERE location like '%Los Angeles%'
and length(orderID) = 6
and orderID <> 'Order ID'
group by Product;

/*Which locations in New York received at least 3 orders in January, and how many orders did they each receive? (Hint: use HAVING).*/
select location, count(orderID)
FROM BIT_DB.JanSales
WHERE location like '%New York%' 
and length(orderiD) = 6
and orderID <> 'Order ID'
group by location
having count (orderID) > 2;

/*How many of each type of headphone were sold in February?*/
SELECT Product, sum(Quantity) as 'amount sold'
FROM BIT_DB.FebSales
WHERE Product like '%headphones%'
and length(orderID) = 6
and orderID <> 'Order ID'
group by Product;

/*What was the average amount spent per account in February? 
(Hints: For this question, we want the average amount spent / number of accounts, not the amount spent by each account. To multiply, 
you can use the * symbol, and to divide, you can use the / symbol.)*/

select avg(Quantity*price) as 'Average Amount'
from BIT_DB.FebSales fs
left join BIT_DB.customers c
on fs.orderID = c.order_id
where length(orderID) = 6
and orderID <> 'Order ID';

/*What was the average quantity of products purchased per account in February? 
(Hint: just like question 3, we want the overall average, not the average for each account individually).*/

select sum(quantity)/count(c.acctnum) as 'Average # products purchased'
from BIT_DB.FebSales fs
left join BIT_DB.customers c
on fs.orderID = c.order_id
where length(orderID) = 6
and orderID <> 'Order ID';

/*Which product brought in the most revenue in January and how much revenue did it bring in total?*/
select product, sum(quantity*price) 
from BIT_DB.JanSales
where length(orderID) = 6
and orderID <> 'Order ID'
group by product order by sum(quantity*price);
